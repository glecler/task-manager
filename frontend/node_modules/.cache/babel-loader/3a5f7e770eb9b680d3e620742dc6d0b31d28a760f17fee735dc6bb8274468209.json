{"ast":null,"code":"var _jsxFileName = \"/Users/gregoirelecler/Documents/GoblinModeCoding/task-manager/src/components/TaskBoard.js\";\nimport { Box } from 'grommet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskBoard({\n  items\n}) {\n  if (!items) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 12\n    }, this);\n  }\n  const groupItemsByStatus = items => {\n    return items.reduce((grouped, item) => {\n      const status = item.status;\n      if (!grouped[status]) {\n        grouped[status] = [];\n      }\n      grouped[status].push(item);\n      return grouped;\n    }, {});\n  };\n  const groupedItems = groupItemsByStatus(items);\n  console.log(groupedItems);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    round: \"medium\",\n    direction: \"row\",\n    gap: \"medium\",\n    justify: \"around\",\n    fill: true,\n    children: Object.entries(groupedItems).map(([status, itemsForStatus]) => /*#__PURE__*/_jsxDEV(Box, {\n      fill: true,\n      round: \"medium\",\n      elevation: \"large\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: itemsForStatus.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item.description\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, status, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }, this);\n}\n_c = TaskBoard;\nvar _c;\n$RefreshReg$(_c, \"TaskBoard\");","map":{"version":3,"names":["Box","jsxDEV","_jsxDEV","TaskBoard","items","children","fileName","_jsxFileName","lineNumber","columnNumber","groupItemsByStatus","reduce","grouped","item","status","push","groupedItems","console","log","round","direction","gap","justify","fill","Object","entries","map","itemsForStatus","elevation","description","id","_c","$RefreshReg$"],"sources":["/Users/gregoirelecler/Documents/GoblinModeCoding/task-manager/src/components/TaskBoard.js"],"sourcesContent":["import { Box } from 'grommet';\n\nexport default function TaskBoard({items}) {\n\tif (!items) {\n    return <p>Loading...</p>;\n  }\n\n\tconst groupItemsByStatus = (items) => {\n    return items.reduce((grouped, item) => {\n      const status = item.status;\n\n      if (!grouped[status]) {\n        grouped[status] = [];\n      }\n\n      grouped[status].push(item);\n      return grouped;\n    }, {});\n  };\n\n\tconst groupedItems = groupItemsByStatus(items);\n\tconsole.log(groupedItems);\n  \n\treturn (\n\t\t<Box round=\"medium\" direction=\"row\" gap=\"medium\" justify=\"around\" fill>\n\t\t\n\t\t{Object.entries(groupedItems).map(([status, itemsForStatus]) => (\n        <Box fill round=\"medium\" elevation=\"large\" key={status}>\n          <h2>{status}</h2>\n          <ul>\n            {itemsForStatus.map(item => (\n              <li key={item.id}>{item.description}</li>\n            ))}\n          </ul>\n        </Box>\n      ))}\n\n\t\t</Box>\n  );\n}\n"],"mappings":";AAAA,SAASA,GAAG,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,eAAe,SAASC,SAASA,CAAC;EAACC;AAAK,CAAC,EAAE;EAC1C,IAAI,CAACA,KAAK,EAAE;IACT,oBAAOF,OAAA;MAAAG,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC1B;EAED,MAAMC,kBAAkB,GAAIN,KAAK,IAAK;IACnC,OAAOA,KAAK,CAACO,MAAM,CAAC,CAACC,OAAO,EAAEC,IAAI,KAAK;MACrC,MAAMC,MAAM,GAAGD,IAAI,CAACC,MAAM;MAE1B,IAAI,CAACF,OAAO,CAACE,MAAM,CAAC,EAAE;QACpBF,OAAO,CAACE,MAAM,CAAC,GAAG,EAAE;MACtB;MAEAF,OAAO,CAACE,MAAM,CAAC,CAACC,IAAI,CAACF,IAAI,CAAC;MAC1B,OAAOD,OAAO;IAChB,CAAC,EAAE,CAAC,CAAC,CAAC;EACR,CAAC;EAEF,MAAMI,YAAY,GAAGN,kBAAkB,CAACN,KAAK,CAAC;EAC9Ca,OAAO,CAACC,GAAG,CAACF,YAAY,CAAC;EAEzB,oBACCd,OAAA,CAACF,GAAG;IAACmB,KAAK,EAAC,QAAQ;IAACC,SAAS,EAAC,KAAK;IAACC,GAAG,EAAC,QAAQ;IAACC,OAAO,EAAC,QAAQ;IAACC,IAAI;IAAAlB,QAAA,EAErEmB,MAAM,CAACC,OAAO,CAACT,YAAY,CAAC,CAACU,GAAG,CAAC,CAAC,CAACZ,MAAM,EAAEa,cAAc,CAAC,kBACrDzB,OAAA,CAACF,GAAG;MAACuB,IAAI;MAACJ,KAAK,EAAC,QAAQ;MAACS,SAAS,EAAC,OAAO;MAAAvB,QAAA,gBACxCH,OAAA;QAAAG,QAAA,EAAKS;MAAM;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACjBP,OAAA;QAAAG,QAAA,EACGsB,cAAc,CAACD,GAAG,CAACb,IAAI,iBACtBX,OAAA;UAAAG,QAAA,EAAmBQ,IAAI,CAACgB;QAAW,GAA1BhB,IAAI,CAACiB,EAAE;UAAAxB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAwB,CACzC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA,GANyCK,MAAM;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOjD,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAED,CAAC;AAER;AAACsB,EAAA,GArCuB5B,SAAS;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}