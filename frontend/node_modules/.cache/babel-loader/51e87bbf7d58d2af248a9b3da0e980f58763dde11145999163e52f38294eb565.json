{"ast":null,"code":"var _jsxFileName = \"/Users/gregoirelecler/Documents/GoblinModeCoding/task-manager/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Heading, Grommet, DropButton } from 'grommet';\nimport TaskBoard from './components/TaskBoard.js';\nimport NewTask from './components/NewTask.js';\nimport { getTasks, deleteTask, editTask, changeTaskStatus, createTask } from './utils/api.js';\nimport './app.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const handleGetTasks = () => {\n    getTasks().then(data => {\n      const updatedTasks = data || [];\n      setTasks(updatedTasks);\n    }).catch(error => console.log('error getting tasks', error));\n  };\n  const handleChangeStatus = (task, status) => {\n    changeTaskStatus(task, status).catch(error => console.log('error', error));\n    handleGetTasks().catch(error => console.log('error'));\n  };\n  const handleCreateTask = (task, description, tags) => {\n    createTask(task, description, tags).then(result => {\n      setTasks([...tasks, result]);\n    }).catch(error => console.log('error', error));\n  };\n  useEffect(() => {\n    handleGetTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Grommet, {\n      theme: {\n        global: {\n          font: {\n            family: \"Roboto\"\n          }\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        align: \"center\",\n        gap: \"medium\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          level: \"1\",\n          children: \" Task Manager \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(DropButton, {\n          label: \"New Task\",\n          dropContent: /*#__PURE__*/_jsxDEV(NewTask, {\n            createTask: handleCreateTask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 20\n          }, this),\n          dropAlign: {\n            top: \"bottom\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(TaskBoard, {\n          tasks: tasks,\n          editTask: editTask,\n          deleteTask: deleteTask,\n          changeTaskStatus: changeTaskStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Box","Heading","Grommet","DropButton","TaskBoard","NewTask","getTasks","deleteTask","editTask","changeTaskStatus","createTask","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","handleGetTasks","then","data","updatedTasks","catch","error","console","log","handleChangeStatus","task","status","handleCreateTask","description","tags","result","className","children","theme","global","font","family","align","gap","level","fileName","_jsxFileName","lineNumber","columnNumber","label","dropContent","dropAlign","top","_c","$RefreshReg$"],"sources":["/Users/gregoirelecler/Documents/GoblinModeCoding/task-manager/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Box, Heading, Grommet, DropButton } from 'grommet';\nimport TaskBoard from './components/TaskBoard.js';\nimport NewTask from './components/NewTask.js';\nimport { getTasks, deleteTask, editTask, changeTaskStatus, createTask } from './utils/api.js';\nimport './app.css';\n\nfunction App() {\n\t\n\tconst [tasks, setTasks] = useState([]);\n\t\n\tconst handleGetTasks = () => {\n\t\tgetTasks()\n\t\t.then(data => {const updatedTasks = data || []; setTasks(updatedTasks)})\n\t\t.catch(error => console.log('error getting tasks', error))\n\n\t};\n\n\tconst handleChangeStatus = (task, status) => {\n\t\tchangeTaskStatus(task, status)\n\t\t\t.catch(error => console.log('error', error));\n\t\thandleGetTasks()\n\t\t\t.catch(error => console.log('error'))\n\t};\n\n\tconst handleCreateTask = (task, description, tags) => {\n\t\tcreateTask(task, description, tags)\n\t\t\t.then(result => {setTasks([...tasks, result]);})\n\t\t\t.catch(error => console.log('error', error));\n\t};\n\n\tuseEffect(() => {\n\t\thandleGetTasks();\n  }, []);\n\n\n  return (\n    <div className=\"App\">\n\t\t\t<Grommet\n\t\t\t\ttheme={{ global: {\n\t\t\t\t\tfont: { family: \"Roboto\"},\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Box align=\"center\" gap=\"medium\">\n\t\t\t\t<Heading level=\"1\"> Task Manager </Heading>\n\t\t\t\t\t<DropButton\n\t\t\t\t\t\tlabel=\"New Task\"\n\t\t\t\t\t\tdropContent={<NewTask createTask={handleCreateTask}/>}\n\t\t\t\t\t\tdropAlign={{top: \"bottom\"}}\n\t\t\t\t\t/>\n\t\t\t\t\t<TaskBoard tasks={tasks} editTask={editTask} deleteTask={deleteTask} changeTaskStatus={changeTaskStatus}/>\n\t\t\t\t</Box>\t\n\t\t</Grommet>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,EAAEC,OAAO,EAAEC,OAAO,EAAEC,UAAU,QAAQ,SAAS;AAC3D,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,SAASC,QAAQ,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,gBAAgB,EAAEC,UAAU,QAAQ,gBAAgB;AAC7F,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEd,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMmB,cAAc,GAAGA,CAAA,KAAM;IAC5BX,QAAQ,CAAC,CAAC,CACTY,IAAI,CAACC,IAAI,IAAI;MAAC,MAAMC,YAAY,GAAGD,IAAI,IAAI,EAAE;MAAEH,QAAQ,CAACI,YAAY,CAAC;IAAA,CAAC,CAAC,CACvEC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,KAAK,CAAC,CAAC;EAE3D,CAAC;EAED,MAAMG,kBAAkB,GAAGA,CAACC,IAAI,EAAEC,MAAM,KAAK;IAC5ClB,gBAAgB,CAACiB,IAAI,EAAEC,MAAM,CAAC,CAC5BN,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,KAAK,CAAC,CAAC;IAC7CL,cAAc,CAAC,CAAC,CACdI,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC,CAAC;EACvC,CAAC;EAED,MAAMI,gBAAgB,GAAGA,CAACF,IAAI,EAAEG,WAAW,EAAEC,IAAI,KAAK;IACrDpB,UAAU,CAACgB,IAAI,EAAEG,WAAW,EAAEC,IAAI,CAAC,CACjCZ,IAAI,CAACa,MAAM,IAAI;MAACf,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEgB,MAAM,CAAC,CAAC;IAAC,CAAC,CAAC,CAC/CV,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,KAAK,CAAC,CAAC;EAC9C,CAAC;EAEDvB,SAAS,CAAC,MAAM;IACfkB,cAAc,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAGN,oBACEL,OAAA;IAAKoB,SAAS,EAAC,KAAK;IAAAC,QAAA,eACrBrB,OAAA,CAACV,OAAO;MACPgC,KAAK,EAAE;QAAEC,MAAM,EAAE;UAChBC,IAAI,EAAE;YAAEC,MAAM,EAAE;UAAQ;QACxB;MACD,CAAE;MAAAJ,QAAA,eAEFrB,OAAA,CAACZ,GAAG;QAACsC,KAAK,EAAC,QAAQ;QAACC,GAAG,EAAC,QAAQ;QAAAN,QAAA,gBAChCrB,OAAA,CAACX,OAAO;UAACuC,KAAK,EAAC,GAAG;UAAAP,QAAA,EAAC;QAAc;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eAC1ChC,OAAA,CAACT,UAAU;UACV0C,KAAK,EAAC,UAAU;UAChBC,WAAW,eAAElC,OAAA,CAACP,OAAO;YAACK,UAAU,EAAEkB;UAAiB;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAE;UACtDG,SAAS,EAAE;YAACC,GAAG,EAAE;UAAQ;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B,CAAC,eACFhC,OAAA,CAACR,SAAS;UAACW,KAAK,EAAEA,KAAM;UAACP,QAAQ,EAAEA,QAAS;UAACD,UAAU,EAAEA,UAAW;UAACE,gBAAgB,EAAEA;QAAiB;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC9B,EAAA,CAjDQD,GAAG;AAAAoC,EAAA,GAAHpC,GAAG;AAmDZ,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}