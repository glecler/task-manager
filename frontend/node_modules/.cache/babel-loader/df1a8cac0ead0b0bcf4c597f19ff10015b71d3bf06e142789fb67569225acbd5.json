{"ast":null,"code":"import{Box}from'grommet';import Task from'./Task.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function TaskBoard(_ref){let{tasks,editTask,deleteTask,changeTaskStatus}=_ref;if(!tasks)tasks=[];const todoTasks=tasks.filter(task=>task.status==='To Do');const progTasks=tasks.filter(task=>task.status==='In Progress');const doneTasks=tasks.filter(task=>task.status==='Done');return/*#__PURE__*/_jsxs(Box,{round:\"medium\",direction:\"row\",gap:\"medium\",justify:\"around\",fill:true,children:[/*#__PURE__*/_jsxs(Box,{fill:true,gap:\"medium\",round:\"medium\",elevation:\"large\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"To Do\"}),todoTasks.map(task=>/*#__PURE__*/_jsx(Task,{task:task,editTask:editTask,deleteTask:deleteTask,changeTaskStatus:changeTaskStatus}))]}),/*#__PURE__*/_jsxs(Box,{fill:true,gap:\"medium\",round:\"medium\",elevation:\"large\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"In Progress\"}),progTasks.map(task=>/*#__PURE__*/_jsx(Task,{task:task,editTask:editTask,deleteTask:deleteTask,changeTaskStatus:changeTaskStatus}))]}),/*#__PURE__*/_jsxs(Box,{fill:true,gap:\"medium\",round:\"medium\",elevation:\"large\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Done\"}),doneTasks.map(task=>/*#__PURE__*/_jsx(Task,{task:task,editTask:editTask,deleteTask:deleteTask,changeTaskStatus:changeTaskStatus}))]})]});}","map":{"version":3,"names":["Box","Task","jsx","_jsx","jsxs","_jsxs","TaskBoard","_ref","tasks","editTask","deleteTask","changeTaskStatus","todoTasks","filter","task","status","progTasks","doneTasks","round","direction","gap","justify","fill","children","elevation","map"],"sources":["/Users/gregoirelecler/Documents/GoblinModeCoding/task-manager/frontend/src/components/TaskBoard.js"],"sourcesContent":["import { Box } from 'grommet';\nimport Task from './Task.js';\n\nexport default function TaskBoard({tasks, editTask, deleteTask, changeTaskStatus}) {\n\tif (!tasks)\n\t\ttasks = []\n\tconst todoTasks = tasks.filter((task) => task.status === 'To Do')\n\tconst progTasks = tasks.filter((task) => task.status === 'In Progress')\n\tconst doneTasks = tasks.filter((task) => task.status === 'Done')\n\n\t\treturn (\n\t\t<Box round=\"medium\" direction=\"row\" gap=\"medium\" justify=\"around\" fill>\n        <Box fill gap=\"medium\" round=\"medium\" elevation=\"large\">\n          <h2>To Do</h2>\n\t\t\t{todoTasks.map(task => (\n              <Task task={task} editTask={editTask} deleteTask={deleteTask} changeTaskStatus={changeTaskStatus}/>\n            ))}\n        </Box>\n\t\t\t\t<Box fill gap=\"medium\" round=\"medium\" elevation=\"large\">\n          <h2>In Progress</h2>\n\t\t\t\t\t\t{progTasks.map(task => (\n              <Task task={task} editTask={editTask} deleteTask={deleteTask} changeTaskStatus={changeTaskStatus}/>\n            ))}\n        </Box>\n\t\t\t\t<Box fill gap=\"medium\" round=\"medium\" elevation=\"large\">\n          <h2>Done</h2>\n\t\t\t\t\t\t{doneTasks.map(task => (\n              <Task task={task} editTask={editTask} deleteTask={deleteTask} changeTaskStatus={changeTaskStatus}/>\n            ))}\n        </Box>\n\t\t</Box>\n  );\n}\n"],"mappings":"AAAA,OAASA,GAAG,KAAQ,SAAS,CAC7B,MAAO,CAAAC,IAAI,KAAM,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE7B,cAAe,SAAS,CAAAC,SAASA,CAAAC,IAAA,CAAkD,IAAjD,CAACC,KAAK,CAAEC,QAAQ,CAAEC,UAAU,CAAEC,gBAAgB,CAAC,CAAAJ,IAAA,CAChF,GAAI,CAACC,KAAK,CACTA,KAAK,CAAG,EAAE,CACX,KAAM,CAAAI,SAAS,CAAGJ,KAAK,CAACK,MAAM,CAAEC,IAAI,EAAKA,IAAI,CAACC,MAAM,GAAK,OAAO,CAAC,CACjE,KAAM,CAAAC,SAAS,CAAGR,KAAK,CAACK,MAAM,CAAEC,IAAI,EAAKA,IAAI,CAACC,MAAM,GAAK,aAAa,CAAC,CACvE,KAAM,CAAAE,SAAS,CAAGT,KAAK,CAACK,MAAM,CAAEC,IAAI,EAAKA,IAAI,CAACC,MAAM,GAAK,MAAM,CAAC,CAE/D,mBACAV,KAAA,CAACL,GAAG,EAACkB,KAAK,CAAC,QAAQ,CAACC,SAAS,CAAC,KAAK,CAACC,GAAG,CAAC,QAAQ,CAACC,OAAO,CAAC,QAAQ,CAACC,IAAI,MAAAC,QAAA,eAChElB,KAAA,CAACL,GAAG,EAACsB,IAAI,MAACF,GAAG,CAAC,QAAQ,CAACF,KAAK,CAAC,QAAQ,CAACM,SAAS,CAAC,OAAO,CAAAD,QAAA,eACrDpB,IAAA,OAAAoB,QAAA,CAAI,OAAK,CAAI,CAAC,CACpBX,SAAS,CAACa,GAAG,CAACX,IAAI,eACRX,IAAA,CAACF,IAAI,EAACa,IAAI,CAAEA,IAAK,CAACL,QAAQ,CAAEA,QAAS,CAACC,UAAU,CAAEA,UAAW,CAACC,gBAAgB,CAAEA,gBAAiB,CAAC,CACnG,CAAC,EACD,CAAC,cACVN,KAAA,CAACL,GAAG,EAACsB,IAAI,MAACF,GAAG,CAAC,QAAQ,CAACF,KAAK,CAAC,QAAQ,CAACM,SAAS,CAAC,OAAO,CAAAD,QAAA,eACjDpB,IAAA,OAAAoB,QAAA,CAAI,aAAW,CAAI,CAAC,CACvBP,SAAS,CAACS,GAAG,CAACX,IAAI,eACXX,IAAA,CAACF,IAAI,EAACa,IAAI,CAAEA,IAAK,CAACL,QAAQ,CAAEA,QAAS,CAACC,UAAU,CAAEA,UAAW,CAACC,gBAAgB,CAAEA,gBAAiB,CAAC,CACnG,CAAC,EACD,CAAC,cACVN,KAAA,CAACL,GAAG,EAACsB,IAAI,MAACF,GAAG,CAAC,QAAQ,CAACF,KAAK,CAAC,QAAQ,CAACM,SAAS,CAAC,OAAO,CAAAD,QAAA,eACjDpB,IAAA,OAAAoB,QAAA,CAAI,MAAI,CAAI,CAAC,CAChBN,SAAS,CAACQ,GAAG,CAACX,IAAI,eACXX,IAAA,CAACF,IAAI,EAACa,IAAI,CAAEA,IAAK,CAACL,QAAQ,CAAEA,QAAS,CAACC,UAAU,CAAEA,UAAW,CAACC,gBAAgB,CAAEA,gBAAiB,CAAC,CACnG,CAAC,EACD,CAAC,EACP,CAAC,CAER"},"metadata":{},"sourceType":"module","externalDependencies":[]}