{"ast":null,"code":"var _jsxFileName = \"/Users/gregoirelecler/Documents/GoblinModeCoding/task-manager/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { Box, PageHeader, Grommet } from 'grommet';\nimport TaskBoard from './components/TaskBoard.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState(null);\n  const handleAddTaskClick = () => {\n    const status = window.prompt('Enter status:');\n    const description = window.prompt('Enter description:');\n    if (status && description) {\n      const newTask = {\n        status,\n        description\n      };\n      fetch('http://localhost:8080/items', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newTask)\n      }).then(response => response.json()).then(data => {\n        // Update the state with the new task\n        setTasks([...tasks, data]);\n      }).catch(error => console.error('Error creating task:', error));\n    } else {\n      // Handle case where user cancels the prompt or inputs are empty\n      console.log('Task creation canceled or invalid input.');\n    }\n  };\n  useEffect(() => {\n    // Fetch items from the server\n    fetch('http://localhost:8080/items').then(response => response.json()).then(data => setTasks(data)).catch(error => console.error('Error fetching items:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Grommet, {\n      children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n        title: \"Task Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        margin: \"medium\",\n        gap: \"medium\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddTaskClick,\n          children: \" New Task \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(TaskBoard, {\n          tasks: tasks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ldJOg5+gk08WuP7h8IqOcr/yxxI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Box","PageHeader","Grommet","TaskBoard","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","handleAddTaskClick","status","window","prompt","description","newTask","fetch","method","headers","body","JSON","stringify","then","response","json","data","catch","error","console","log","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","margin","gap","onClick","_c","$RefreshReg$"],"sources":["/Users/gregoirelecler/Documents/GoblinModeCoding/task-manager/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { Box, PageHeader, Grommet } from 'grommet';\nimport TaskBoard from './components/TaskBoard.js';\n\nfunction App() {\n\t\n\tconst [tasks, setTasks] = useState(null);\n\t\n\tconst handleAddTaskClick = () => {\n\n\t\t\tconst status = window.prompt('Enter status:');\n\t\t\tconst description = window.prompt('Enter description:');\n\n\t\t\tif (status && description) {\n      \n\t\t\t\tconst newTask = { status, description };\n      \n\t\t\t\tfetch('http://localhost:8080/items', {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify(newTask),\n\t\t\t\t})\n\t\t\t\t.then(response => response.json())\n        .then(data => {\n          // Update the state with the new task\n          setTasks([...tasks, data]);\n        })\n        .catch(error => console.error('Error creating task:', error));\n    } else {\n      // Handle case where user cancels the prompt or inputs are empty\n      console.log('Task creation canceled or invalid input.');\n    }\n  };\n\n\n\tuseEffect(() => {\n\t\t\t// Fetch items from the server\n\t\t\tfetch('http://localhost:8080/items')\n\t\t\t\t.then(response => response.json())\n\t\t\t\t.then(data => setTasks(data))\n\t\t\t\t.catch(error => console.error('Error fetching items:', error));\n  }, []);\n\n  return (\n    <div className=\"App\">\n\t\t\t<Grommet>\n\t\t\t\t<PageHeader title=\"Task Manager\"/>\n\t\t\t\t<Box margin=\"medium\" gap=\"medium\">\n\t\t\t\t\t<button onClick={handleAddTaskClick}> New Task </button>\n\t\t\t\t\t<TaskBoard tasks={tasks} />\n\t\t\t\t</Box>\t\n\t\t</Grommet>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}