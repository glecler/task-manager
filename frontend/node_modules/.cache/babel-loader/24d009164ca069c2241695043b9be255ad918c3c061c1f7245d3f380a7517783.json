{"ast":null,"code":"var _jsxFileName = \"/Users/gregoirelecler/Documents/GoblinModeCoding/task-manager/src/components/NewTask.js\";\nimport { Box } from 'grommet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewTask() {\n  const handleAddItemClick = async () => {\n    try {\n      // Assuming your server endpoint for creating items is http://localhost:8080/items\n      const serverEndpoint = 'http://localhost:8080/items';\n\n      // Create a new item object (adjust as needed)\n      const newItem = {\n        status: 'dummy',\n        description: 'dummy'\n      };\n\n      // Send a POST request to the server\n      const response = await fetch(serverEndpoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newItem)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to add item');\n      }\n      const data = await response.json();\n      // Handle the response from the server if needed\n      console.log('Item added successfully:', data);\n    } catch (error) {\n      console.error('Error adding item:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    width: \"1/3\",\n    round: \"medium\",\n    elevation: \"large\",\n    onClick: handleAddItemClick,\n    children: \"+ Create new task\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 4\n  }, this);\n}\n_c = NewTask;\nvar _c;\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"names":["Box","jsxDEV","_jsxDEV","NewTask","handleAddItemClick","serverEndpoint","newItem","status","description","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","console","log","error","message","width","round","elevation","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gregoirelecler/Documents/GoblinModeCoding/task-manager/src/components/NewTask.js"],"sourcesContent":["import { Box } from 'grommet';\n\nexport default function NewTask() {\nconst handleAddItemClick = async () => {\n    try {\n      // Assuming your server endpoint for creating items is http://localhost:8080/items\n      const serverEndpoint = 'http://localhost:8080/items';\n\n      // Create a new item object (adjust as needed)\n      const newItem = {\n        status: 'dummy',\n        description: 'dummy'\n      };\n\n      // Send a POST request to the server\n      const response = await fetch(serverEndpoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newItem)\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to add item');\n      }\n\n      const data = await response.json();\n      // Handle the response from the server if needed\n      console.log('Item added successfully:', data);\n    } catch (error) {\n      console.error('Error adding item:', error.message);\n    }\n  };\n\n  return (\n\t\t\t<Box width=\"1/3\" round=\"medium\" elevation=\"large\" onClick={handleAddItemClick}>\n\t\t\t\t+ Create new task\n\t\t\t</Box>\n  );\n}\n\n"],"mappings":";AAAA,SAASA,GAAG,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,eAAe,SAASC,OAAOA,CAAA,EAAG;EAClC,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF;MACA,MAAMC,cAAc,GAAG,6BAA6B;;MAEpD;MACA,MAAMC,OAAO,GAAG;QACdC,MAAM,EAAE,OAAO;QACfC,WAAW,EAAE;MACf,CAAC;;MAED;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,cAAc,EAAE;QAC3CM,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,OAAO;MAC9B,CAAC,CAAC;MAEF,IAAI,CAACG,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;MACvC;MAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAClC;MACAC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEH,IAAI,CAAC;IAC/C,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAACC,OAAO,CAAC;IACpD;EACF,CAAC;EAED,oBACCrB,OAAA,CAACF,GAAG;IAACwB,KAAK,EAAC,KAAK;IAACC,KAAK,EAAC,QAAQ;IAACC,SAAS,EAAC,OAAO;IAACC,OAAO,EAAEvB,kBAAmB;IAAAwB,QAAA,EAAC;EAE/E;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAET;AAACC,EAAA,GAtCuB9B,OAAO;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}