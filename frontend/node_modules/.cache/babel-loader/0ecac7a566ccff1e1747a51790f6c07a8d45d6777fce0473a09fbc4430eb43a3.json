{"ast":null,"code":"var _jsxFileName = \"/Users/gregoirelecler/Documents/GoblinModeCoding/task-manager/frontend/src/components/NewTask.js\",\n  _s = $RefreshSig$();\nimport { Box, Select, TextArea, FormField, Button } from 'grommet';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewTask({\n  createTask\n}) {\n  _s();\n  const [status, setStatus] = useState('');\n  const [description, setDescription] = useState('');\n  const [tags, setTags] = useState('');\n  const handleConfirmCreateTask = () => {\n    if (status && description && tags) {\n      createTask(status, description, tags);\n    } else {\n      console.log('Invalid input.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    align: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(FormField, {\n      label: \"Status\",\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        value: status,\n        onChange: ({\n          option\n        }) => setStatus(option),\n        options: ['To Do', 'In Progress', 'Done']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      fill: true,\n      label: \"Description\",\n      children: /*#__PURE__*/_jsxDEV(TextArea, {\n        value: description,\n        onChange: event => setDescription(event.target.value),\n        placeholder: \"type here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      fill: true,\n      label: \"Tags\",\n      children: /*#__PURE__*/_jsxDEV(TextArea, {\n        value: tags,\n        onChange: event => setTags(event.target.value),\n        placeholder: \"add tags here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      label: \"Create Task\",\n      onClick: handleConfirmCreateTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 3\n  }, this);\n}\n_s(NewTask, \"tsQYMSgF+MAkm8CA6u4N+llNqmk=\");\n_c = NewTask;\nvar _c;\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"names":["Box","Select","TextArea","FormField","Button","React","useState","jsxDEV","_jsxDEV","NewTask","createTask","_s","status","setStatus","description","setDescription","tags","setTags","handleConfirmCreateTask","console","log","align","children","label","value","onChange","option","options","fileName","_jsxFileName","lineNumber","columnNumber","fill","event","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/gregoirelecler/Documents/GoblinModeCoding/task-manager/frontend/src/components/NewTask.js"],"sourcesContent":["import { Box, Select, TextArea, FormField, Button } from 'grommet';\nimport React, { useState } from 'react';\n\nexport default function NewTask({ createTask }) {\n  const [status, setStatus] = useState('');\n  const [description, setDescription] = useState('');\n  const [tags, setTags] = useState('');\n\n  const handleConfirmCreateTask = () => {\n    if (status && description && tags) {\n      createTask(status, description, tags);\n    } else {\n      console.log('Invalid input.');\n    }\n  };\n\n\treturn (\n\t\t<Box align=\"center\">\n      <FormField label=\"Status\">\n          <Select value={status} onChange={({option}) => setStatus(option)} options={['To Do', 'In Progress', 'Done']}/>\n      </FormField>\n      <FormField fill label=\"Description\">\n\t\t\t\t\t<TextArea value={description} onChange={event => setDescription(event.target.value)} placeholder=\"type here\" />\n      </FormField>\n      <FormField fill label=\"Tags\">\n\t\t\t\t\t<TextArea value={tags} onChange={event => setTags(event.target.value)} placeholder=\"add tags here\" />\n      </FormField>\n      <Button label=\"Create Task\" onClick={handleConfirmCreateTask}/>\n    </Box>\n  );\n}\n\n"],"mappings":";;AAAA,SAASA,GAAG,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,SAAS;AAClE,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,OAAOA,CAAC;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EAC9C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMY,uBAAuB,GAAGA,CAAA,KAAM;IACpC,IAAIN,MAAM,IAAIE,WAAW,IAAIE,IAAI,EAAE;MACjCN,UAAU,CAACE,MAAM,EAAEE,WAAW,EAAEE,IAAI,CAAC;IACvC,CAAC,MAAM;MACLG,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC/B;EACF,CAAC;EAEF,oBACCZ,OAAA,CAACR,GAAG;IAACqB,KAAK,EAAC,QAAQ;IAAAC,QAAA,gBACfd,OAAA,CAACL,SAAS;MAACoB,KAAK,EAAC,QAAQ;MAAAD,QAAA,eACrBd,OAAA,CAACP,MAAM;QAACuB,KAAK,EAAEZ,MAAO;QAACa,QAAQ,EAAEA,CAAC;UAACC;QAAM,CAAC,KAAKb,SAAS,CAACa,MAAM,CAAE;QAACC,OAAO,EAAE,CAAC,OAAO,EAAE,aAAa,EAAE,MAAM;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvG,CAAC,eACZvB,OAAA,CAACL,SAAS;MAAC6B,IAAI;MAACT,KAAK,EAAC,aAAa;MAAAD,QAAA,eACpCd,OAAA,CAACN,QAAQ;QAACsB,KAAK,EAAEV,WAAY;QAACW,QAAQ,EAAEQ,KAAK,IAAIlB,cAAc,CAACkB,KAAK,CAACC,MAAM,CAACV,KAAK,CAAE;QAACW,WAAW,EAAC;MAAW;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnG,CAAC,eACZvB,OAAA,CAACL,SAAS;MAAC6B,IAAI;MAACT,KAAK,EAAC,MAAM;MAAAD,QAAA,eAC7Bd,OAAA,CAACN,QAAQ;QAACsB,KAAK,EAAER,IAAK;QAACS,QAAQ,EAAEQ,KAAK,IAAIhB,OAAO,CAACgB,KAAK,CAACC,MAAM,CAACV,KAAK,CAAE;QAACW,WAAW,EAAC;MAAe;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzF,CAAC,eACZvB,OAAA,CAACJ,MAAM;MAACmB,KAAK,EAAC,aAAa;MAACa,OAAO,EAAElB;IAAwB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEV;AAACpB,EAAA,CA3BuBF,OAAO;AAAA4B,EAAA,GAAP5B,OAAO;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}