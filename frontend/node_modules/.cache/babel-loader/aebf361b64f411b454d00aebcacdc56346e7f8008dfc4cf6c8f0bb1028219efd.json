{"ast":null,"code":"var _jsxFileName = \"/Users/gregoirelecler/Documents/GoblinModeCoding/task-manager/frontend/src/components/TaskBoard.js\";\nimport { Box } from 'grommet';\nimport Task from './Task.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskBoard({\n  tasks,\n  editTask,\n  deleteTask,\n  changeTaskStatus\n}) {\n  if (!tasks) tasks = [];\n  const todoTasks = tasks.filter(task => task.status === 'To Do');\n  const progTasks = tasks.filter(task => task.status === 'In Progress');\n  const doneTasks = tasks.filter(task => task.status === 'Done');\n  return /*#__PURE__*/_jsxDEV(Box, {\n    round: \"medium\",\n    direction: \"row\",\n    gap: \"medium\",\n    justify: \"around\",\n    fill: true,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      fill: true,\n      gap: \"medium\",\n      round: \"medium\",\n      elevation: \"large\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"To Do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this), tasks && todoTasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n        task: task,\n        editTask: editTask,\n        deleteTask: deleteTask,\n        changeTaskStatus: changeTaskStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      fill: true,\n      gap: \"medium\",\n      round: \"medium\",\n      elevation: \"large\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"In Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), tasks && progTasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n        task: task,\n        editTask: editTask,\n        deleteTask: deleteTask,\n        changeTaskStatus: changeTaskStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      fill: true,\n      gap: \"medium\",\n      round: \"medium\",\n      elevation: \"large\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), tasks && doneTasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n        task: task,\n        editTask: editTask,\n        deleteTask: deleteTask,\n        changeTaskStatus: changeTaskStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }, this);\n}\n_c = TaskBoard;\nvar _c;\n$RefreshReg$(_c, \"TaskBoard\");","map":{"version":3,"names":["Box","Task","jsxDEV","_jsxDEV","TaskBoard","tasks","editTask","deleteTask","changeTaskStatus","todoTasks","filter","task","status","progTasks","doneTasks","round","direction","gap","justify","fill","children","elevation","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["/Users/gregoirelecler/Documents/GoblinModeCoding/task-manager/frontend/src/components/TaskBoard.js"],"sourcesContent":["import { Box } from 'grommet';\nimport Task from './Task.js';\n\nexport default function TaskBoard({tasks, editTask, deleteTask, changeTaskStatus}) {\n\tif (!tasks)\n\t\ttasks = []\n\tconst todoTasks = tasks.filter((task) => task.status === 'To Do')\n\tconst progTasks = tasks.filter((task) => task.status === 'In Progress')\n\tconst doneTasks = tasks.filter((task) => task.status === 'Done')\n\n\t\treturn (\n\t\t<Box round=\"medium\" direction=\"row\" gap=\"medium\" justify=\"around\" fill>\n        <Box fill gap=\"medium\" round=\"medium\" elevation=\"large\">\n          <h2>To Do</h2>\n\t\t\t\t\t\t{tasks &&\n            todoTasks.map(task => (\n              <Task task={task} editTask={editTask} deleteTask={deleteTask} changeTaskStatus={changeTaskStatus}/>\n            ))}\n        </Box>\n\t\t\t\t<Box fill gap=\"medium\" round=\"medium\" elevation=\"large\">\n          <h2>In Progress</h2>\n\t\t\t\t\t\t{tasks &&\n            progTasks.map(task => (\n              <Task task={task} editTask={editTask} deleteTask={deleteTask} changeTaskStatus={changeTaskStatus}/>\n            ))}\n        </Box>\n\t\t\t\t<Box fill gap=\"medium\" round=\"medium\" elevation=\"large\">\n          <h2>Done</h2>\n\t\t\t\t\t\t{tasks &&\n            doneTasks.map(task => (\n              <Task task={task} editTask={editTask} deleteTask={deleteTask} changeTaskStatus={changeTaskStatus}/>\n            ))}\n        </Box>\n\t\t</Box>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}