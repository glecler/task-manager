{"ast":null,"code":"var _jsxFileName = \"/Users/gregoirelecler/Documents/GoblinModeCoding/task-manager/src/components/TaskBoard.js\";\nimport { Box } from 'grommet';\nimport Task from './Task.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskBoard({\n  tasks\n}, {\n  onEditTask\n}) {\n  if (!tasks) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 12\n    }, this);\n  }\n  const validStatus = [\"To Do\", \"In Progress\", \"Done\"];\n  const groupTasksByStatus = tasks => {\n    return tasks.reduce((grouped, task) => {\n      const status = task.status;\n      if (validStatus.includes(status)) {\n        if (!grouped[status]) {\n          grouped[status] = [];\n        }\n        grouped[status].push(task);\n      }\n      return grouped;\n    }, {});\n  };\n  const groupedTasks = groupTasksByStatus(tasks);\n  console.log(groupedTasks);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    round: \"medium\",\n    direction: \"row\",\n    gap: \"medium\",\n    justify: \"around\",\n    fill: true,\n    children: Object.entries(groupedTasks).map(([status, tasksForStatus]) => /*#__PURE__*/_jsxDEV(Box, {\n      fill: true,\n      gap: \"medium\",\n      round: \"medium\",\n      elevation: \"large\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), tasksForStatus.map(task => /*#__PURE__*/_jsxDEV(Task, {\n        task: task,\n        onEditTask: onEditTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }, this))]\n    }, status, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }, this);\n}\n_c = TaskBoard;\nvar _c;\n$RefreshReg$(_c, \"TaskBoard\");","map":{"version":3,"names":["Box","Task","jsxDEV","_jsxDEV","TaskBoard","tasks","onEditTask","children","fileName","_jsxFileName","lineNumber","columnNumber","validStatus","groupTasksByStatus","reduce","grouped","task","status","includes","push","groupedTasks","console","log","round","direction","gap","justify","fill","Object","entries","map","tasksForStatus","elevation","_c","$RefreshReg$"],"sources":["/Users/gregoirelecler/Documents/GoblinModeCoding/task-manager/src/components/TaskBoard.js"],"sourcesContent":["import { Box } from 'grommet';\nimport Task from './Task.js';\n\nexport default function TaskBoard({tasks}, {onEditTask}) {\n\tif (!tasks) {\n    return <p>Loading...</p>;\n  }\n\tconst validStatus = [\"To Do\", \"In Progress\", \"Done\"];\n\n\tconst groupTasksByStatus = (tasks) => {\n    return tasks.reduce((grouped, task) => {\n      const status = task.status;\n\t\t\tif (validStatus.includes(status)) {\n\t\t\t\tif (!grouped[status]) {\n\t\t\t\t\tgrouped[status] = [];\n\t\t\t\t}\n\n\t\t\t\tgrouped[status].push(task);\n\t\t\t}\n\t\t\treturn grouped;\n    }, {});\n  };\n\n\tconst groupedTasks = groupTasksByStatus(tasks);\n\tconsole.log(groupedTasks);\n  \n\treturn (\n\t\t<Box round=\"medium\" direction=\"row\" gap=\"medium\" justify=\"around\" fill>\n\t\t\n\t\t{Object.entries(groupedTasks).map(([status, tasksForStatus]) => (\n        <Box fill gap=\"medium\" round=\"medium\" elevation=\"large\" key={status}>\n          <h2>{status}</h2>\n            {tasksForStatus.map(task => (\n              <Task task={task} onEditTask={onEditTask}/>\n            ))}\n        </Box>\n      ))}\n\t\t</Box>\n  );\n}\n"],"mappings":";AAAA,SAASA,GAAG,QAAQ,SAAS;AAC7B,OAAOC,IAAI,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,eAAe,SAASC,SAASA,CAAC;EAACC;AAAK,CAAC,EAAE;EAACC;AAAU,CAAC,EAAE;EACxD,IAAI,CAACD,KAAK,EAAE;IACT,oBAAOF,OAAA;MAAAI,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC1B;EACD,MAAMC,WAAW,GAAG,CAAC,OAAO,EAAE,aAAa,EAAE,MAAM,CAAC;EAEpD,MAAMC,kBAAkB,GAAIR,KAAK,IAAK;IACnC,OAAOA,KAAK,CAACS,MAAM,CAAC,CAACC,OAAO,EAAEC,IAAI,KAAK;MACrC,MAAMC,MAAM,GAAGD,IAAI,CAACC,MAAM;MAC7B,IAAIL,WAAW,CAACM,QAAQ,CAACD,MAAM,CAAC,EAAE;QACjC,IAAI,CAACF,OAAO,CAACE,MAAM,CAAC,EAAE;UACrBF,OAAO,CAACE,MAAM,CAAC,GAAG,EAAE;QACrB;QAEAF,OAAO,CAACE,MAAM,CAAC,CAACE,IAAI,CAACH,IAAI,CAAC;MAC3B;MACA,OAAOD,OAAO;IACb,CAAC,EAAE,CAAC,CAAC,CAAC;EACR,CAAC;EAEF,MAAMK,YAAY,GAAGP,kBAAkB,CAACR,KAAK,CAAC;EAC9CgB,OAAO,CAACC,GAAG,CAACF,YAAY,CAAC;EAEzB,oBACCjB,OAAA,CAACH,GAAG;IAACuB,KAAK,EAAC,QAAQ;IAACC,SAAS,EAAC,KAAK;IAACC,GAAG,EAAC,QAAQ;IAACC,OAAO,EAAC,QAAQ;IAACC,IAAI;IAAApB,QAAA,EAErEqB,MAAM,CAACC,OAAO,CAACT,YAAY,CAAC,CAACU,GAAG,CAAC,CAAC,CAACb,MAAM,EAAEc,cAAc,CAAC,kBACrD5B,OAAA,CAACH,GAAG;MAAC2B,IAAI;MAACF,GAAG,EAAC,QAAQ;MAACF,KAAK,EAAC,QAAQ;MAACS,SAAS,EAAC,OAAO;MAAAzB,QAAA,gBACrDJ,OAAA;QAAAI,QAAA,EAAKU;MAAM;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACdoB,cAAc,CAACD,GAAG,CAACd,IAAI,iBACtBb,OAAA,CAACF,IAAI;QAACe,IAAI,EAAEA,IAAK;QAACV,UAAU,EAAEA;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAC3C,CAAC;IAAA,GAJuDM,MAAM;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAK9D,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAER;AAACsB,EAAA,GApCuB7B,SAAS;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}